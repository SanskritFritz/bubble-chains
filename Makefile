#############################################################################
# Makefile for building: bin/chains
# Generated by qmake (2.01a) (Qt 4.8.7) on: H dec. 14 23:55:56 2015
# Project:  Game.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile Game.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lXrandr -lSDL -lX11 -lSDL_mixer -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		gamewidget.cpp \
		gamescene.cpp \
		gameitem.cpp \
		gamepaint.cpp \
		gamecontrol.cpp \
		baseitem.cpp \
		gamemenu.cpp \
		gametools.cpp \
		hammertool.cpp \
		bombtool.cpp \
		gamesound.cpp \
		menucontrol.cpp \
		gameprofile.cpp \
		thundertool.cpp \
		clocktool.cpp \
		gamestock.cpp \
		randomkilltool.cpp \
		mixertool.cpp \
		twintool.cpp \
		displaywrapper.cpp \
		gamebonus.cpp \
		gamestatics.cpp \
		gamestat.cpp \
		gamebackground.cpp \
		consttools.cpp \
		gamexml.cpp \
		scaler.cpp \
		gametargetcontrol.cpp \
		gametargets.cpp \
		progressbar.cpp \
		sceneprivate.cpp \
		gamepanel.cpp \
		gamepanelcontrol.cpp \
		gamedialogs.cpp \
		gamebutton.cpp \
		hintcontrol.cpp \
		gamehintcontrol.cpp \
		particlecontrol.cpp \
		helpform.cpp moc_gamewidget.cpp \
		moc_gamescene.cpp \
		moc_gamemenu.cpp \
		moc_hammertool.cpp \
		moc_bombtool.cpp \
		moc_gamesound.cpp \
		moc_gameprofile.cpp \
		moc_thundertool.cpp \
		moc_clocktool.cpp \
		moc_randomkilltool.cpp \
		moc_mixertool.cpp \
		moc_twintool.cpp \
		moc_gamebonus.cpp \
		moc_consttools.cpp \
		moc_gamepanel.cpp \
		moc_gamepanelcontrol.cpp \
		moc_gamedialogs.cpp \
		moc_gamehintcontrol.cpp \
		moc_helpform.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		gamewidget.o \
		gamescene.o \
		gameitem.o \
		gamepaint.o \
		gamecontrol.o \
		baseitem.o \
		gamemenu.o \
		gametools.o \
		hammertool.o \
		bombtool.o \
		gamesound.o \
		menucontrol.o \
		gameprofile.o \
		thundertool.o \
		clocktool.o \
		gamestock.o \
		randomkilltool.o \
		mixertool.o \
		twintool.o \
		displaywrapper.o \
		gamebonus.o \
		gamestatics.o \
		gamestat.o \
		gamebackground.o \
		consttools.o \
		gamexml.o \
		scaler.o \
		gametargetcontrol.o \
		gametargets.o \
		progressbar.o \
		sceneprivate.o \
		gamepanel.o \
		gamepanelcontrol.o \
		gamedialogs.o \
		gamebutton.o \
		hintcontrol.o \
		gamehintcontrol.o \
		particlecontrol.o \
		helpform.o \
		moc_gamewidget.o \
		moc_gamescene.o \
		moc_gamemenu.o \
		moc_hammertool.o \
		moc_bombtool.o \
		moc_gamesound.o \
		moc_gameprofile.o \
		moc_thundertool.o \
		moc_clocktool.o \
		moc_randomkilltool.o \
		moc_mixertool.o \
		moc_twintool.o \
		moc_gamebonus.o \
		moc_consttools.o \
		moc_gamepanel.o \
		moc_gamepanelcontrol.o \
		moc_gamedialogs.o \
		moc_gamehintcontrol.o \
		moc_helpform.o \
		qrc_resources.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Game.pro
QMAKE_TARGET  = chains
DESTDIR       = bin/
TARGET        = bin/chains

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_menu.h ui_helpform.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Game.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile Game.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Game.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/chains1.0.0 || $(MKDIR) .tmp/chains1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/chains1.0.0/ && $(COPY_FILE) --parents gamewidget.h gamescene.h defines.h gameitem.h baseitem.h gamemenu.h gametools.h hammertool.h bombtool.h gamesound.h gameprofile.h thundertool.h clocktool.h gamestock.h randomkilltool.h mixertool.h twintool.h displaywrapper.h gamebonus.h scene_if.h gamebackground.h consttools.h scaler.h sceneprivate.h gametargetcontrol.h gametargets.h progressbar.h gamepanel.h gamepanelcontrol.h gamedialogs.h gamebutton.h hintcontrol.h gamehintcontrol.h particlecontrol.h helpform.h .tmp/chains1.0.0/ && $(COPY_FILE) --parents resources.qrc .tmp/chains1.0.0/ && $(COPY_FILE) --parents main.cpp gamewidget.cpp gamescene.cpp gameitem.cpp gamepaint.cpp gamecontrol.cpp baseitem.cpp gamemenu.cpp gametools.cpp hammertool.cpp bombtool.cpp gamesound.cpp menucontrol.cpp gameprofile.cpp thundertool.cpp clocktool.cpp gamestock.cpp randomkilltool.cpp mixertool.cpp twintool.cpp displaywrapper.cpp gamebonus.cpp gamestatics.cpp gamestat.cpp gamebackground.cpp consttools.cpp gamexml.cpp scaler.cpp gametargetcontrol.cpp gametargets.cpp progressbar.cpp sceneprivate.cpp gamepanel.cpp gamepanelcontrol.cpp gamedialogs.cpp gamebutton.cpp hintcontrol.cpp gamehintcontrol.cpp particlecontrol.cpp helpform.cpp .tmp/chains1.0.0/ && $(COPY_FILE) --parents menu.ui helpform.ui .tmp/chains1.0.0/ && $(COPY_FILE) --parents data/lang/chains_ru.ts .tmp/chains1.0.0/ && (cd `dirname .tmp/chains1.0.0` && $(TAR) chains1.0.0.tar chains1.0.0 && $(COMPRESS) chains1.0.0.tar) && $(MOVE) `dirname .tmp/chains1.0.0`/chains1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/chains1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_gamewidget.cpp moc_gamescene.cpp moc_gamemenu.cpp moc_hammertool.cpp moc_bombtool.cpp moc_gamesound.cpp moc_gameprofile.cpp moc_thundertool.cpp moc_clocktool.cpp moc_randomkilltool.cpp moc_mixertool.cpp moc_twintool.cpp moc_gamebonus.cpp moc_consttools.cpp moc_gamepanel.cpp moc_gamepanelcontrol.cpp moc_gamedialogs.cpp moc_gamehintcontrol.cpp moc_helpform.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_gamewidget.cpp moc_gamescene.cpp moc_gamemenu.cpp moc_hammertool.cpp moc_bombtool.cpp moc_gamesound.cpp moc_gameprofile.cpp moc_thundertool.cpp moc_clocktool.cpp moc_randomkilltool.cpp moc_mixertool.cpp moc_twintool.cpp moc_gamebonus.cpp moc_consttools.cpp moc_gamepanel.cpp moc_gamepanelcontrol.cpp moc_gamedialogs.cpp moc_gamehintcontrol.cpp moc_helpform.cpp
moc_gamewidget.cpp: gamewidget.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamewidget.h -o moc_gamewidget.cpp

moc_gamescene.cpp: defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		gamescene.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamescene.h -o moc_gamescene.cpp

moc_gamemenu.cpp: gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		ui_menu.h \
		gamemenu.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamemenu.h -o moc_gamemenu.cpp

moc_hammertool.cpp: gametools.h \
		hammertool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) hammertool.h -o moc_hammertool.cpp

moc_bombtool.cpp: gametools.h \
		bombtool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) bombtool.h -o moc_bombtool.cpp

moc_gamesound.cpp: gamesound.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamesound.h -o moc_gamesound.cpp

moc_gameprofile.cpp: gameprofile.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gameprofile.h -o moc_gameprofile.cpp

moc_thundertool.cpp: gametools.h \
		thundertool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) thundertool.h -o moc_thundertool.cpp

moc_clocktool.cpp: gametools.h \
		clocktool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) clocktool.h -o moc_clocktool.cpp

moc_randomkilltool.cpp: gametools.h \
		randomkilltool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) randomkilltool.h -o moc_randomkilltool.cpp

moc_mixertool.cpp: gametools.h \
		mixertool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) mixertool.h -o moc_mixertool.cpp

moc_twintool.cpp: gametools.h \
		twintool.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) twintool.h -o moc_twintool.cpp

moc_gamebonus.cpp: gamebonus.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamebonus.h -o moc_gamebonus.cpp

moc_consttools.cpp: gametools.h \
		consttools.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) consttools.h -o moc_consttools.cpp

moc_gamepanel.cpp: gamepanel.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamepanel.h -o moc_gamepanel.cpp

moc_gamepanelcontrol.cpp: gamepanelcontrol.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamepanelcontrol.h -o moc_gamepanelcontrol.cpp

moc_gamedialogs.cpp: gamepanel.h \
		gamedialogs.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamedialogs.h -o moc_gamedialogs.cpp

moc_gamehintcontrol.cpp: hintcontrol.h \
		scaler.h \
		gamehintcontrol.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) gamehintcontrol.h -o moc_gamehintcontrol.cpp

moc_helpform.cpp: helpform.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) helpform.h -o moc_helpform.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources.qrc \
		style/checkbox_on_enabled_pressed.png \
		style/radiobutton_off_disabled.png \
		style/left-arrow.png \
		style/menu_indicator.png \
		style/checkbox_inter_enabled_hover.png \
		style/spin_down_enabled.png \
		style/spin_down_enabled_hover.png \
		style/style.css \
		style/checkbox_off_enabled_hover.png \
		style/radiobutton_on_enabled_hover.png \
		style/checkbox_off_enabled.png \
		style/checkbox_on_disabled.png \
		style/spin_up_disabled.png \
		style/spin_up_enabled_pressed.png \
		style/checkbox_inter_enabled_pressed.png \
		style/radiobutton_off_enabled_pressed.png \
		style/radiobutton_on_enabled_pressed.png \
		style/radiobutton_off_enabled.png \
		style/right-arrow.png \
		style/down-arrow.png \
		style/checkbox_off_enabled_pressed.png \
		style/menu_indicator_disabled.png \
		style/checkbox_inter_enabled.png \
		style/up-arrow.png \
		style/spin_up_enabled_hover.png \
		style/checkbox_inter_disabled.png \
		style/checkbox_on_enabled.png \
		style/spin_down_disabled.png \
		style/checkbox_off_disabled.png \
		style/checkbox_on_enabled_hover.png \
		style/spin_down_enabled_pressed.png \
		style/radiobutton_off_enabled_hover.png \
		style/radiobutton_on_enabled.png \
		style/spin_up_enabled.png \
		style/radiobutton_on_disabled.png \
		images/button_cancel.png \
		images/img64_number.png \
		images/item4.png \
		images/target_base_off.png \
		images/target_base_on.png \
		images/item5.png \
		images/con1.png \
		images/target_faller_on.png \
		images/score.png \
		images/item_faller.png \
		images/item6.png \
		images/target_cyan_on.png \
		images/img64_color.png \
		images/target_green_on.png \
		images/logo.png \
		images/item_jocker.png \
		images/target_number_off.png \
		images/target_faller_off.png \
		images/target_blue_on.png \
		images/img64_faller.png \
		images/item1.png \
		images/target_yellow_on.png \
		images/target_red_off.png \
		images/clock.png \
		images/bg_menu.jpg \
		images/target_yellow_off.png \
		images/cursor_wand.png \
		images/item2.png \
		images/target_blue_off.png \
		images/button_ok.png \
		images/flare.png \
		images/target_green_off.png \
		images/target_magenta_on.png \
		images/target_red_on.png \
		images/img64_base.png \
		images/item3.png \
		images/img64_jocker.png \
		images/target_number_on.png \
		images/target_magenta_off.png \
		images/target_cyan_off.png \
		gui/redo.png \
		gui/reload.png \
		gui/language.png \
		gui/assistant.png \
		gui/add_user.png \
		gui/forward.png \
		gui/forward.png \
		gui/users.png \
		gui/lamp.png \
		gui/display.png \
		gui/games.png \
		gui/configure.png \
		gui/configure.png \
		gui/finish.png \
		gui/finish.png \
		gui/users2.png \
		gui/cancel.png \
		gui/cancel.png \
		gui/pack.png \
		gui/speech.png \
		gui/mycomputer.png \
		gui/back.png \
		gui/sound.png \
		gui/remove.png
	/usr/lib/qt4/bin/rcc -name resources resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_menu.h ui_helpform.h
compiler_uic_clean:
	-$(DEL_FILE) ui_menu.h ui_helpform.h
ui_menu.h: menu.ui
	/usr/lib/qt4/bin/uic menu.ui -o ui_menu.h

ui_helpform.h: helpform.ui
	/usr/lib/qt4/bin/uic helpform.ui -o ui_helpform.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp gamewidget.h \
		gamestock.h \
		gameprofile.h \
		defines.h \
		displaywrapper.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

gamewidget.o: gamewidget.cpp gamewidget.h \
		gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		gamesound.h \
		gameprofile.h \
		gamemenu.h \
		ui_menu.h \
		displaywrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamewidget.o gamewidget.cpp

gamescene.o: gamescene.cpp gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		baseitem.h \
		gametools.h \
		gamemenu.h \
		ui_menu.h \
		gamewidget.h \
		gamesound.h \
		gameprofile.h \
		gamestock.h \
		gamebonus.h \
		gamebackground.h \
		gametargetcontrol.h \
		gametargets.h \
		gamepanelcontrol.h \
		gamedialogs.h \
		gamepanel.h \
		sceneprivate.h \
		progressbar.h \
		gamehintcontrol.h \
		hintcontrol.h \
		particlecontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamescene.o gamescene.cpp

gameitem.o: gameitem.cpp gameitem.h \
		defines.h \
		gamestock.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameitem.o gameitem.cpp

gamepaint.o: gamepaint.cpp gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		baseitem.h \
		gametools.h \
		gamemenu.h \
		ui_menu.h \
		gamestock.h \
		gameprofile.h \
		gamebonus.h \
		gamebackground.h \
		gametargetcontrol.h \
		gamepanelcontrol.h \
		gamehintcontrol.h \
		hintcontrol.h \
		particlecontrol.h \
		sceneprivate.h \
		progressbar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamepaint.o gamepaint.cpp

gamecontrol.o: gamecontrol.cpp gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		gamemenu.h \
		ui_menu.h \
		gametools.h \
		gamebonus.h \
		gameprofile.h \
		gametargetcontrol.h \
		gamepanelcontrol.h \
		gamehintcontrol.h \
		hintcontrol.h \
		sceneprivate.h \
		progressbar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamecontrol.o gamecontrol.cpp

baseitem.o: baseitem.cpp baseitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o baseitem.o baseitem.cpp

gamemenu.o: gamemenu.cpp gamemenu.h \
		gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		ui_menu.h \
		gameprofile.h \
		gamewidget.h \
		gamestock.h \
		displaywrapper.h \
		helpform.h \
		version.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamemenu.o gamemenu.cpp

gametools.o: gametools.cpp gametools.h \
		scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h \
		gamewidget.h \
		gamestock.h \
		gamebonus.h \
		gameprofile.h \
		gamesound.h \
		hammertool.h \
		bombtool.h \
		thundertool.h \
		clocktool.h \
		randomkilltool.h \
		mixertool.h \
		twintool.h \
		consttools.h \
		progressbar.h \
		particlecontrol.h \
		gamehintcontrol.h \
		hintcontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gametools.o gametools.cpp

hammertool.o: hammertool.cpp hammertool.h \
		gametools.h \
		gameitem.h \
		defines.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hammertool.o hammertool.cpp

bombtool.o: bombtool.cpp bombtool.h \
		gametools.h \
		gameitem.h \
		defines.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bombtool.o bombtool.cpp

gamesound.o: gamesound.cpp gamesound.h \
		gamewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamesound.o gamesound.cpp

menucontrol.o: menucontrol.cpp gamemenu.h \
		gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		ui_menu.h \
		gameprofile.h \
		gamesound.h \
		gamewidget.h \
		helpform.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menucontrol.o menucontrol.cpp

gameprofile.o: gameprofile.cpp gameprofile.h \
		gamewidget.h \
		gamesound.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameprofile.o gameprofile.cpp

thundertool.o: thundertool.cpp thundertool.h \
		gametools.h \
		gameitem.h \
		defines.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thundertool.o thundertool.cpp

clocktool.o: clocktool.cpp clocktool.h \
		gametools.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clocktool.o clocktool.cpp

gamestock.o: gamestock.cpp gamestock.h \
		gameitem.h \
		defines.h \
		scaler.h \
		scene_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamestock.o gamestock.cpp

randomkilltool.o: randomkilltool.cpp randomkilltool.h \
		gametools.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o randomkilltool.o randomkilltool.cpp

mixertool.o: mixertool.cpp mixertool.h \
		gametools.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mixertool.o mixertool.cpp

twintool.o: twintool.cpp twintool.h \
		gametools.h \
		gamesound.h \
		gamebonus.h \
		scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o twintool.o twintool.cpp

displaywrapper.o: displaywrapper.cpp displaywrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o displaywrapper.o displaywrapper.cpp

gamebonus.o: gamebonus.cpp gamebonus.h \
		gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		gamestock.h \
		gameprofile.h \
		gamewidget.h \
		gametools.h \
		gamesound.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamebonus.o gamebonus.cpp

gamestatics.o: gamestatics.cpp scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h \
		baseitem.h \
		gamestock.h \
		gamesound.h \
		gamebonus.h \
		gametools.h \
		gameprofile.h \
		gamewidget.h \
		particlecontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamestatics.o gamestatics.cpp

gamestat.o: gamestat.cpp gamescene.h \
		defines.h \
		gameitem.h \
		scene_if.h \
		scaler.h \
		gameprofile.h \
		gamestock.h \
		gamebonus.h \
		gametools.h \
		gamesound.h \
		sceneprivate.h \
		gamedialogs.h \
		gamepanel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamestat.o gamestat.cpp

gamebackground.o: gamebackground.cpp gamebackground.h \
		gamewidget.h \
		gameprofile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamebackground.o gamebackground.cpp

consttools.o: consttools.cpp consttools.h \
		gametools.h \
		gamesound.h \
		gamewidget.h \
		gamestock.h \
		gamebonus.h \
		scene_if.h \
		gameitem.h \
		defines.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o consttools.o consttools.cpp

gamexml.o: gamexml.cpp gameprofile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamexml.o gamexml.cpp

scaler.o: scaler.cpp scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scaler.o scaler.cpp

gametargetcontrol.o: gametargetcontrol.cpp gametargetcontrol.h \
		scaler.h \
		gametargets.h \
		gamestock.h \
		gamesound.h \
		scene_if.h \
		gameitem.h \
		defines.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gametargetcontrol.o gametargetcontrol.cpp

gametargets.o: gametargets.cpp gametargets.h \
		gametargetcontrol.h \
		scaler.h \
		gameitem.h \
		defines.h \
		gamestock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gametargets.o gametargets.cpp

progressbar.o: progressbar.cpp progressbar.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o progressbar.o progressbar.cpp

sceneprivate.o: sceneprivate.cpp sceneprivate.h \
		progressbar.h \
		gameitem.h \
		defines.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sceneprivate.o sceneprivate.cpp

gamepanel.o: gamepanel.cpp gamepanel.h \
		gamepanelcontrol.h \
		scaler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamepanel.o gamepanel.cpp

gamepanelcontrol.o: gamepanelcontrol.cpp gamepanelcontrol.h \
		gamepanel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamepanelcontrol.o gamepanelcontrol.cpp

gamedialogs.o: gamedialogs.cpp gamedialogs.h \
		gamepanel.h \
		scaler.h \
		gamestock.h \
		gamebutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamedialogs.o gamedialogs.cpp

gamebutton.o: gamebutton.cpp gamebutton.h \
		gamepanel.h \
		scaler.h \
		gamestock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamebutton.o gamebutton.cpp

hintcontrol.o: hintcontrol.cpp hintcontrol.h \
		scaler.h \
		gamestock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hintcontrol.o hintcontrol.cpp

gamehintcontrol.o: gamehintcontrol.cpp gamehintcontrol.h \
		hintcontrol.h \
		scaler.h \
		gameprofile.h \
		particlecontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamehintcontrol.o gamehintcontrol.cpp

particlecontrol.o: particlecontrol.cpp particlecontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o particlecontrol.o particlecontrol.cpp

helpform.o: helpform.cpp helpform.h \
		ui_helpform.h \
		gamewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helpform.o helpform.cpp

moc_gamewidget.o: moc_gamewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamewidget.o moc_gamewidget.cpp

moc_gamescene.o: moc_gamescene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamescene.o moc_gamescene.cpp

moc_gamemenu.o: moc_gamemenu.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamemenu.o moc_gamemenu.cpp

moc_hammertool.o: moc_hammertool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_hammertool.o moc_hammertool.cpp

moc_bombtool.o: moc_bombtool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bombtool.o moc_bombtool.cpp

moc_gamesound.o: moc_gamesound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamesound.o moc_gamesound.cpp

moc_gameprofile.o: moc_gameprofile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gameprofile.o moc_gameprofile.cpp

moc_thundertool.o: moc_thundertool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_thundertool.o moc_thundertool.cpp

moc_clocktool.o: moc_clocktool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_clocktool.o moc_clocktool.cpp

moc_randomkilltool.o: moc_randomkilltool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_randomkilltool.o moc_randomkilltool.cpp

moc_mixertool.o: moc_mixertool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mixertool.o moc_mixertool.cpp

moc_twintool.o: moc_twintool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_twintool.o moc_twintool.cpp

moc_gamebonus.o: moc_gamebonus.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamebonus.o moc_gamebonus.cpp

moc_consttools.o: moc_consttools.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_consttools.o moc_consttools.cpp

moc_gamepanel.o: moc_gamepanel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamepanel.o moc_gamepanel.cpp

moc_gamepanelcontrol.o: moc_gamepanelcontrol.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamepanelcontrol.o moc_gamepanelcontrol.cpp

moc_gamedialogs.o: moc_gamedialogs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamedialogs.o moc_gamedialogs.cpp

moc_gamehintcontrol.o: moc_gamehintcontrol.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamehintcontrol.o moc_gamehintcontrol.cpp

moc_helpform.o: moc_helpform.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_helpform.o moc_helpform.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/bin/ || $(MKDIR) $(INSTALL_ROOT)/usr/bin/ 
	-$(INSTALL_PROGRAM) "bin/$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/bin/ 


install_datas: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/chains/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/chains/ 
	-$(INSTALL_DIR) /home/frank/Builds/aur/bubble-chains/src/chains-0.1.1-src/data $(INSTALL_ROOT)/usr/share/chains/


uninstall_datas:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/chains/data
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/chains/ 


install:  install_target install_datas  FORCE

uninstall: uninstall_target uninstall_datas   FORCE

FORCE:

